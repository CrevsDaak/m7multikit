/*
 * Copyright (C) 2010-2011 FlameWing
 * Copyright (C) 2015-2017 CrevsDaak
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */


/*
 *	This is in the form of a library file for easier use in other mods.
 *
 *	Created by Nicolas C. aka Crevs Daak on 2014-12-08.
 *	Time-stamp: </Users/nico/BG_modding/m7multikit/m7multikit/lib/7c#ee_multikit.tph, 2019-07-22 Monday 19:05:46 nico>
 *
 *	Supporting file for the Multikit mod.
 *
 *	DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING!!!!!
 *
 */

OUTER_SPRINT "7c#ee_multikit_version" "v1.0.5 Multikit %m7version%"
INCLUDE "%basepath%/lib/fl#add_kit_ee.tpa"

OUTER_SET __kit_has_backstab_ = 1
	
ACTION_IF $classes(1) STRING_EQUAL "THIEF" || ($classes(1) STRING_EQUAL "RANGER" && FILE_CONTAINS_EVALUATED (backstab.2da "%kit1%")) BEGIN
	ACTION_IF FILE_CONTAINS_EVALUATED (backstab.2da "%kit1%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit1%"
				file = backstab
			RET
				multikit_backstab = row
		END
	END ELSE BEGIN
	        // find out WHAT THE FUCK is going on here
	        COPY_EXISTING backstab.2da override		
			SPRINT __2da_for_no_stab_ ""
			SPRINT __backstab_2da_for_swashies_ ""
		        COUNT_2DA_COLS __backstab_2da_cols_
			READ_2DA_ENTRIES_NOW __backstab_2da_rows_ __backstab_2da_cols_
			FOR (i = 0; i < __backstab_2da_rows_; i += 1) BEGIN
			        READ_2DA_ENTRY_FORMER __backstab_2da_rows_ i 0 __kit_
				PATCH_IF "%__kit_%" STRING_EQUAL_CASE "THIEF" BEGIN
				        FOR (j = 1; j < __backstab_2da_cols_; j += 1) BEGIN
					        READ_2DA_ENTRY_FORMER __backstab_2da_rows_ i j __backstab_2da_for_swashies_
						PATCH_IF j < (__backstab_2da_cols_ - 1) BEGIN
						        SPRINT __backstab_2da_for_swashies_ EVAL "%__backstab_2da_for_swashies_% "
						END
						SPRINT __2da_for_no_stab_ EVAL "%__2da_for_no_stab_%%__backstab_2da_for_swashies_%"
						PATCH_PRINT ~%__2da_for_no_stab_% %j%~
					END
					i = __backstab_2da_rows_ + 1
				END
			END
			INNER_PATCH_SAVE multikit_backstab "%__2da_for_no_stab_%" BEGIN
			        REPLACE_TEXTUALLY ~2~ ~1~
				REPLACE_TEXTUALLY ~3~ ~1~
				REPLACE_TEXTUALLY ~4~ ~1~
				REPLACE_TEXTUALLY ~5~ ~1~
			END
			SPRINT __2da_for_no_stab_ ""
		BUT_ONLY
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (thiefskl.2da "%kit1%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit1%"
				file = thiefskl
			RET
				multikit_thiefskl = row
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (traplimt.2da "%kit1%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit1%"
				file = traplimt
			RET
				multikit_traplimt = row
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (crippstr.2da "%kit1%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit1%"
				file = crippstr
			RET
				multikit_crippstr = row
		END
	END ELSE BEGIN
	        COPY_EXISTING crippstr.2da override
			SPRINT __2da_for_no_stab_ ""
			SPRINT __crippstr_2da_for_swashies_ ""
		        COUNT_2DA_COLS __crippstr_2da_cols_
			READ_2DA_ENTRIES_NOW __crippstr_2da_rows_ __crippstr_2da_cols_
			FOR (i = 0; i < __crippstr_2da_rows_; i += 1) BEGIN
			        READ_2DA_ENTRY_FORMER __crippstr_2da_rows_ i 0 __kit_
				PATCH_IF "%__kit_%" STRING_EQUAL_CASE "THIEF" BEGIN
				        FOR (j = 1; j < __crippstr_2da_cols_; j += 1) BEGIN
					        READ_2DA_ENTRY_FORMER __crippstr_2da_rows_ i j __crippstr_2da_for_swashies_
						PATCH_IF j < (__crippstr_2da_cols_ - 1) BEGIN
						        SPRINT __crippstr_2da_for_swashies_ EVAL "%__crippstr_2da_for_swashies_% "
						END
						SPRINT __2da_for_no_stab_ EVAL "%__2da_for_no_stab_%%__crippstr_2da_for_swashies_%"
					END
					i = __crippstr_2da_rows_ + 1
				END
			END
			INNER_PATCH_SAVE multikit_crippstr "%__2da_for_no_stab_%" BEGIN
			        REPLACE_TEXTUALLY ~2~ ~0~
				REPLACE_TEXTUALLY ~3~ ~0~
				REPLACE_TEXTUALLY ~4~ ~0~
				REPLACE_TEXTUALLY ~5~ ~0~
				REPLACE_TEXTUALLY ~6~ ~0~
				REPLACE_TEXTUALLY ~7~ ~0~
				REPLACE_TEXTUALLY ~8~ ~0~
				REPLACE_TEXTUALLY ~9~ ~0~
			END
			SPRINT __2da_for_no_stab_ ""
		BUT_ONLY
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (sneakatt.2da "%kit1%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit1%"
				file = sneakatt
			RET
				multikit_sneakatt = row
		END
	END ELSE BEGIN
	        COPY_EXISTING sneakatt.2da override
			SPRINT __2da_for_no_stab_ ""
			SPRINT __sneakatt_2da_for_swashies_ ""
		        COUNT_2DA_COLS __sneakatt_2da_cols_
			READ_2DA_ENTRIES_NOW __sneakatt_2da_rows_ __sneakatt_2da_cols_
			FOR (i = 0; i < __sneakatt_2da_rows_; i += 1) BEGIN
			        READ_2DA_ENTRY_FORMER __sneakatt_2da_rows_ i 0 __kit_
				PATCH_IF "%__kit_%" STRING_EQUAL_CASE "THIEF" BEGIN
				        FOR (j = 1; j < __sneakatt_2da_cols_; j += 1) BEGIN
					        READ_2DA_ENTRY_FORMER __sneakatt_2da_rows_ i j __sneakatt_2da_for_swashies_
						PATCH_IF j < (__sneakatt_2da_cols_ - 1) BEGIN
						        SPRINT __sneakatt_2da_for_swashies_ EVAL "%__sneakatt_2da_for_swashies_% "
						END
						SPRINT __2da_for_no_stab_ EVAL "%__2da_for_no_stab_%%__sneakatt_2da_for_swashies_%"
					END
					i = __sneakatt_2da_rows_ + 1
				END
			END
			INNER_PATCH_SAVE multikit_sneakatt "%__2da_for_no_stab_%" BEGIN
			        REPLACE_TEXTUALLY ~2~ ~1~
				REPLACE_TEXTUALLY ~3~ ~1~
				REPLACE_TEXTUALLY ~4~ ~1~
				REPLACE_TEXTUALLY ~5~ ~1~
				REPLACE_TEXTUALLY ~6~ ~1~
				REPLACE_TEXTUALLY ~7~ ~1~
				REPLACE_TEXTUALLY ~8~ ~1~
				REPLACE_TEXTUALLY ~9~ ~1~
				REPLACE_TEXTUALLY ~10~ ~1~
				REPLACE_TEXTUALLY ~11~ ~1~
			END
			SPRINT __2da_for_no_stab_ ""
		BUT_ONLY
	END
END ELSE ACTION_IF $classes(2) STRING_EQUAL "THIEF" BEGIN
	ACTION_IF FILE_CONTAINS_EVALUATED (backstab.2da "%kit2%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit2%"
				file = backstab
			RET
				multikit_backstab = row
		END
	END ELSE BEGIN
	        COPY_EXISTING backstab.2da override
			SPRINT __2da_for_no_stab_ ""
			SPRINT __backstab_2da_for_swashies_ ""
		        COUNT_2DA_COLS __backstab_2da_cols_
			READ_2DA_ENTRIES_NOW __backstab_2da_rows_ __backstab_2da_cols_
			FOR (i = 0; i < __backstab_2da_rows_; i += 1) BEGIN
			        READ_2DA_ENTRY_FORMER __backstab_2da_rows_ i 0 __kit_
				PATCH_IF "%__kit_%" STRING_EQUAL_CASE "THIEF" BEGIN
				        FOR (j = 1; j < __backstab_2da_cols_; j += 1) BEGIN
					        READ_2DA_ENTRY_FORMER __backstab_2da_rows_ i j __backstab_2da_for_swashies_
						PATCH_IF j < (__backstab_2da_cols_ - 1) BEGIN
						        SPRINT __backstab_2da_for_swashies_ EVAL "%__backstab_2da_for_swashies_% "
						END
						SPRINT __2da_for_no_stab_ EVAL "%__2da_for_no_stab_%%__backstab_2da_for_swashies_%"
					END
					i = __backstab_2da_rows_ + 1
				END
			END
			INNER_PATCH_SAVE multikit_backstab "%__2da_for_no_stab_%" BEGIN
			        REPLACE_TEXTUALLY ~2~ ~1~
				REPLACE_TEXTUALLY ~3~ ~1~
				REPLACE_TEXTUALLY ~4~ ~1~
				REPLACE_TEXTUALLY ~5~ ~1~
			END
			SPRINT __2da_for_no_stab_ ""
		BUT_ONLY
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (thiefskl.2da "%kit2%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit2%"
				file = thiefskl
			RET
				multikit_thiefskl = row
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (traplimt.2da "%kit2%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit2%"
				file = traplimt
			RET
				multikit_traplimt = row
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (crippstr.2da "%kit2%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit2%"
				file = crippstr
			RET
				multikit_crippstr = row
		END
	END ELSE BEGIN
	        COPY_EXISTING crippstr.2da override
			SPRINT __2da_for_no_stab_ ""
			SPRINT __crippstr_2da_for_swashies_ ""
		        COUNT_2DA_COLS __crippstr_2da_cols_
			READ_2DA_ENTRIES_NOW __crippstr_2da_rows_ __crippstr_2da_cols_
			FOR (i = 0; i < __crippstr_2da_rows_; i += 1) BEGIN
			        READ_2DA_ENTRY_FORMER __crippstr_2da_rows_ i 0 __kit_
				PATCH_IF "%__kit_%" STRING_EQUAL_CASE "THIEF" BEGIN
				        FOR (j = 1; j < __crippstr_2da_cols_; j += 1) BEGIN
					        READ_2DA_ENTRY_FORMER __crippstr_2da_rows_ i j __crippstr_2da_for_swashies_
						PATCH_IF j < (__crippstr_2da_cols_ - 1) BEGIN
						        SPRINT __crippstr_2da_for_swashies_ EVAL "%__crippstr_2da_for_swashies_% "
						END
						SPRINT __2da_for_no_stab_ EVAL "%__2da_for_no_stab_%%__crippstr_2da_for_swashies_%"
					END
					i = __crippstr_2da_rows_ + 1
				END
			END
			INNER_PATCH_SAVE multikit_crippstr "%__2da_for_no_stab_%" BEGIN
			        REPLACE_TEXTUALLY ~2~ ~0~
				REPLACE_TEXTUALLY ~3~ ~0~
				REPLACE_TEXTUALLY ~4~ ~0~
				REPLACE_TEXTUALLY ~5~ ~0~
				REPLACE_TEXTUALLY ~6~ ~0~
				REPLACE_TEXTUALLY ~7~ ~0~
				REPLACE_TEXTUALLY ~8~ ~0~
				REPLACE_TEXTUALLY ~9~ ~0~
			END
			SPRINT __2da_for_no_stab_ ""
		BUT_ONLY
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (sneakatt.2da "%kit2%") BEGIN
		LAF fl#add_kit_ee#get_row
			STR_VAR
				row_name = EVAL "%kit2%"
				file = sneakatt
			RET
				multikit_sneakatt = row
		END
	END ELSE BEGIN
	        COPY_EXISTING sneakatt.2da override
			SPRINT __2da_for_no_stab_ ""
			SPRINT __sneakatt_2da_for_swashies_ ""
		        COUNT_2DA_COLS __sneakatt_2da_cols_
			READ_2DA_ENTRIES_NOW __sneakatt_2da_rows_ __sneakatt_2da_cols_
			FOR (i = 0; i < __sneakatt_2da_rows_; i += 1) BEGIN
			        READ_2DA_ENTRY_FORMER __sneakatt_2da_rows_ i 0 __kit_
				PATCH_IF "%__kit_%" STRING_EQUAL_CASE "THIEF" BEGIN
				        FOR (j = 1; j < __sneakatt_2da_cols_; j += 1) BEGIN
					        READ_2DA_ENTRY_FORMER __sneakatt_2da_rows_ i j __sneakatt_2da_for_swashies_
						PATCH_IF j < (__sneakatt_2da_cols_ - 1) BEGIN
						        SPRINT __sneakatt_2da_for_swashies_ EVAL "%__sneakatt_2da_for_swashies_% "
						END
						SPRINT __2da_for_no_stab_ EVAL "%__2da_for_no_stab_%%__sneakatt_2da_for_swashies_%"
					END
					i = __sneakatt_2da_rows_ + 1
				END
			END
			INNER_PATCH_SAVE multikit_sneakatt "%__2da_for_no_stab_%" BEGIN
			        REPLACE_TEXTUALLY ~2~ ~1~
				REPLACE_TEXTUALLY ~3~ ~1~
				REPLACE_TEXTUALLY ~4~ ~1~
				REPLACE_TEXTUALLY ~5~ ~1~
				REPLACE_TEXTUALLY ~6~ ~1~
				REPLACE_TEXTUALLY ~7~ ~1~
				REPLACE_TEXTUALLY ~8~ ~1~
				REPLACE_TEXTUALLY ~9~ ~1~
				REPLACE_TEXTUALLY ~10~ ~1~
				REPLACE_TEXTUALLY ~11~ ~1~
			END
			SPRINT __2da_for_no_stab_ ""
		BUT_ONLY
	END
END	  

OUTER_SET SELKATH_OR_SEKOLAH = 0
/* should also track custom kits that give backstab to other classes */
ACTION_IF FILE_CONTAINS_EVALUATED (backstab.2da "%kit1%") && $classes(1) STRING_EQUAL "RANGER" BEGIN
	OUTER_SET SELKATH_OR_SEKOLAH = 1 // yup, fish be stalkers 100% no fake 4 reals
END

COPY_EXISTING clasthac.2da override
	COUNT_2DA_COLS daak_cols__
	READ_2DA_ENTRIES_NOW __clasthac_cd daak_cols__ - 1
	FOR (c__ = 0; c__ < daak_cols__ - 1; c__ += 1) BEGIN
		READ_2DA_ENTRY_FORMER __clasthac_cd 0 c__ comp_kit_
		PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit0%" BEGIN
			READ_2DA_ENTRY_FORMER __clasthac_cd 1 (c__ + 1) __kit0_clasthac_entry
		END
		PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit1%" BEGIN
			READ_2DA_ENTRY_FORMER __clasthac_cd 1 (c__ + 1) __kit1_clasthac_entry
		END
		PATCH_IF "%kit2%" STR_CMP "" BEGIN
			PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit2%" BEGIN
				READ_2DA_ENTRY_FORMER __clasthac_cd 1 (c__ + 1) __kit2_clasthac_entry
			END
		END
	END
	PATCH_IF "%kit2%" STR_CMP "" BEGIN
		LPF m7#max3
			INT_VAR
				n1 = __kit0_clasthac_entry
				n2 = __kit1_clasthac_entry
				n3 = __kit2_clasthac_entry
	   		RET
				__c7_clasthac_entry_ = maxval
		END
	END ELSE BEGIN
	        __c7_clasthac_entry_ = __kit0_clasthac_entry > __kit1_clasthac_entry ? __kit0_clasthac_entry : __kit1_clasthac_entry
	END
BUT_ONLY

OUTER_SPRINT multikit_clasthac "%__c7_clasthac_entry_%"

OUTER_SET is_thief = 0

ACTION_IF kitclassids = 13 || kitclassids = 15 || kitclassids = 10 || kitclassids = 18 || kitclassids = 9 BEGIN
	OUTER_SET is_thief = 1
	OUTER_SET pick_pockets_0 = 0
	OUTER_SET open_locks_0 = 0
	OUTER_SET find_traps_0 = 0
	OUTER_SET move_silently_0 = 0
	OUTER_SET hide_in_shadows_0 = 0
	OUTER_SET detect_illusion_0 = 0
	OUTER_SET set_traps_0 = 0
	OUTER_SET pick_pockets_1 = 0
	OUTER_SET open_locks_1 = 0
	OUTER_SET find_traps_1 = 0
	OUTER_SET move_silently_1 = 0
	OUTER_SET hide_in_shadows_1 = 0
	OUTER_SET detect_illusion_1 = 0
	OUTER_SET set_traps_1 = 0
	OUTER_SET pick_pockets_2 = 0
	OUTER_SET open_locks_2 = 0
	OUTER_SET find_traps_2 = 0
	OUTER_SET move_silently_2 = 0
	OUTER_SET hide_in_shadows_2 = 0
	OUTER_SET detect_illusion_2 = 0
	OUTER_SET set_traps_2 = 0
	COPY_EXISTING clasiskl.2da override
		COUNT_2DA_COLS __cols_daak
		READ_2DA_ENTRIES_NOW __clasiskl_cd __cols_daak - 1
		FOR (j__ = 0; j__ < __cols_daak - 1; ++j__) BEGIN
			READ_2DA_ENTRY_FORMER __clasiskl_cd 0 j__ comp_kit_
			PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit0%" && FILE_CONTAINS_EVALUATED (clasiskl.2da "%kit0%") BEGIN
				READ_2DA_ENTRY_FORMER __clasiskl_cd 1 (j__ + 1) pick_pockets_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 2 (j__ + 1) open_locks_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 3 (j__ + 1) find_traps_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 4 (j__ + 1) move_silently_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 5 (j__ + 1) hide_in_shadows_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 6 (j__ + 1) detect_illusion_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 7 (j__ + 1) set_traps_0
			END
			PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit1%" && FILE_CONTAINS_EVALUATED (clasiskl.2da "%kit1%") BEGIN
				READ_2DA_ENTRY_FORMER __clasiskl_cd 1 (j__ + 1) pick_pockets_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 2 (j__ + 1) open_locks_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 3 (j__ + 1) find_traps_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 4 (j__ + 1) move_silently_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 5 (j__ + 1) hide_in_shadows_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 6 (j__ + 1) detect_illusion_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 7 (j__ + 1) set_traps_1
			END
			PATCH_IF $classes(2) STRING_EQUAL "THIEF" || $classes(2) STRING_EQUAL "CLERIC" BEGIN
				PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit2%" && FILE_CONTAINS_EVALUATED (clasiskl.2da "%kit2%") BEGIN
					READ_2DA_ENTRY_FORMER __clasiskl_cd 1 (j__ + 1) pick_pockets_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 2 (j__ + 1) open_locks_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 3 (j__ + 1) find_traps_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 4 (j__ + 1) move_silently_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 5 (j__ + 1) hide_in_shadows_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 6 (j__ + 1) detect_illusion_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 7 (j__ + 1) set_traps_2
				END
			END
		END
	BUT_ONLY

	ACTION_IF $classes(2) STRING_EQUAL "THIEF" BEGIN
		OUTER_PATCH thieving_skills BEGIN
			LPF m7#max3
				INT_VAR
					n1 = pick_pockets_0
					n2 = pick_pockets_1
					n3 = pick_pockets_2
				RET
					pick_pockets = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = open_locks_0
					n2 = open_locks_1
					n3 = open_locks_2
				RET
					open_locks = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = find_traps_0
					n2 = find_traps_1
					n3 = find_traps_2
				RET
					find_traps = maxval
			END
		
			LPF m7#max3
				INT_VAR
					n1 = move_silently_0
					n2 = move_silently_1
					n3 = move_silently_2
				RET
					move_silently = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = hide_in_shadows_0
					n2 = hide_in_shadows_1
					n3 = hide_in_shadows_2
				RET
					hide_in_shadows = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = detect_illusion_0
					n2 = detect_illusion_1
					n3 = detect_illusion_2
				RET
					detect_illusion = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = set_traps_0
					n2 = set_traps_1
					n3 = set_traps_2
				RET
					set_traps = maxval
			END
		END
	END ELSE BEGIN
		OUTER_SET pick_pockets = pick_pockets_0 > pick_pockets_1 ? pick_pockets_0 : pick_pockets_1
		OUTER_SET open_locks = open_locks_0 > open_locks_1 ? open_locks_0 : open_locks_1
		OUTER_SET find_traps = find_traps_0 > find_traps_1 ? find_traps_0 : find_traps_1
		OUTER_SET move_silently = move_silently_0 > move_silently_1 ? move_silently_0 : move_silently_1
		OUTER_SET hide_in_shadows = hide_in_shadows_0 > hide_in_shadows_1 ? hide_in_shadows_0 : hide_in_shadows_1
		OUTER_SET detect_illusion = detect_illusion_0 > detect_illusion_1 ? detect_illusion_0 : detect_illusion_1
		OUTER_SET set_traps = set_traps_0 > set_traps_1 ? set_traps_0 : set_traps_1
	END
END

OUTER_SPRINT multikit_clasiskl ~%pick_pockets% %open_locks% %find_traps% %move_silently% %hide_in_shadows% %detect_illusion% %set_traps%~ // 0~ dunno about the last 0 for Stealth, I'll see what happens. Edit: nope

ACTION_IF FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_%kit0%") || FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_%kit1%") || FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_%kit2%") BEGIN
	OUTER_SET multikit_fallen = 1
	OUTER_SET multikit_fallen_notice = RESOLVE_STR_REF (@1300041)
END ELSE BEGIN
	OUTER_SET multikit_fallen = 0
	OUTER_SET multikit_fallen_notice = (0 - 2)
END

COPY_EXISTING - clswpbon.2da override
	COUNT_2DA_COLS crevs_cols__
	READ_2DA_ENTRIES_NOW clswpbon__ crevs_cols__
	FOR (__ol = 0; __ol < clswpbon__; __ol += 1) BEGIN
		READ_2DA_ENTRY_FORMER clswpbon__ __ol 0 __kit_2_comp
		PATCH_IF "%__kit_2_comp%" STRING_EQUAL_CASE "%kit0%" BEGIN
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 1 __has_spec_apr_0
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 2 __unarmed_divisor_0
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 3 __unprof_penalty_0
		END
		PATCH_IF "%__kit_2_comp%" STRING_EQUAL_CASE "%kit1%" BEGIN
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 1 __has_spec_apr_1
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 2 __unarmed_divisor_1
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 3 __unprof_penalty_1
		END
		PATCH_IF $classes(2) STRING_EQUAL "THIEF" || $classes(2) STRING_EQUAL "CLERIC" BEGIN
			PATCH_IF "%__kit_2_comp%" STRING_EQUAL_CASE "%kit2%" BEGIN
				READ_2DA_ENTRY_FORMER clswpbon__ __ol 1 __has_spec_apr_2
				READ_2DA_ENTRY_FORMER clswpbon__ __ol 2 __unarmed_divisor_2
				READ_2DA_ENTRY_FORMER clswpbon__ __ol 3 __unprof_penalty_2
			END		
		END
	END

ACTION_IF $classes(2) STRING_EQUAL "THIEF" || $classes(2) STRING_EQUAL "CLERIC" BEGIN
	OUTER_PATCH clswpbon_ur_mom BEGIN
		LPF m7#min3
			INT_VAR
				n1 = __unprof_penalty_0
				n2 = __unprof_penalty_1
				n3 = __unprof_penalty_2
			RET
				__unprof_penalty = minval
		END
		LPF m7#max3
			INT_VAR
				n1 = __has_spec_apr_0
				n2 = __has_spec_apr_1
				n3 = __has_spec_apr_2
			RET
				__has_spec_apr = maxval
		END
		LPF m7#max3
			INT_VAR
				n1 = __unarmed_divisor_0
				n2 = __unarmed_divisor_1
				n3 = __unarmed_divisor_2
			RET
				__unarmed_divisor = maxval
		END
	END
END ELSE BEGIN
	OUTER_SET __has_spec_apr = __has_spec_apr_0 < __has_spec_apr_1 ? __has_spec_apr_1 : __has_spec_apr_0 
	OUTER_SET __unarmed_divisor = __unarmed_divisor_0 < __unarmed_divisor_1 ? __unarmed_divisor_1 : __unarmed_divisor_0
	OUTER_SET __unprof_penalty = __unprof_penalty_0 > __unprof_penalty_1 ? __unprof_penalty_1 : __unprof_penalty_0
END

OUTER_SPRINT multikit_clswpbon EVAL "%__has_spec_apr% %__unarmed_divisor% %__unprof_penalty%"

LAF fl#add_kit_ee
	INT_VAR
		7c#kit_class = "%kitclassids%"
		fallen = "%multikit_fallen%"
		fallen_notice = "%multikit_fallen_notice%"
		7c#thief_class = is_thief
		7c#stalker_kit = SELKATH_OR_SEKOLAH // Imma humanoyd oceanik fisssh
		__has_backstab_ = __kit_has_backstab_
	STR_VAR
		kit_name = EVAL "%kitid%"
		backstab = EVAL "%multikit_backstab%"
		thiefskl = EVAL "%multikit_thiefskl%"
		traplimt = EVAL "%multikit_traplimt%"
		sneakatt = EVAL "%multikit_sneakatt%"
		clswpbon = EVAL "%multikit_clswpbon%"
		crippstr = EVAL "%multikit_crippstr%"
		clasthac = EVAL "%multikit_clasthac%"
		clasiskl = EVAL "%multikit_clasiskl%"
END

ACTION_MATCH "%kitclassids%" WITH
        7 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~FM~
	END
	8 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~FC~
	END
	9 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~FT~
	END
	10 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~FMT~
	END
	13 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~MT~
	END
	14 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~CM~
	END
	15 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~CT~
	END
	16 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~FD~
	END
	17 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~FMC~
	END
	18 BEGIN
	        OUTER_SPRINT __c7__kittable__class ~CR~
	END
	DEFAULT
		FAIL @1300045
END

COPY_EXISTING kitlist.2da override
        READ_2DA_ENTRIES_NOW __c7__kitlist__read 10
	/* ours should be the last but read everything anyway */
	FOR (i = 1; i < __c7__kitlist__read; i = i + 1) BEGIN
	        READ_2DA_ENTRY_FORMER __c7__kitlist__read i 1 __c7__kitlist__kit__name
		PATCH_IF "%kitid%" STR_EQ "%__c7__kitlist__kit__name%" BEGIN
		        READ_2DA_ENTRY_FORMER __c7__kitlist__read i 0 __c7__kitlist
			i = __c7__kitlist__read + 1
		END
	END
BUT_ONLY
/* from aquadrizzt's multiclass kit lib, lots of thanks */
<<<<<<<< qd_blank_k_x_x_inline.2da
2DA  V1.0
*
                    KIT
1    0
>>>>>>>>

ACTION_FOR_EACH __c7__kittable__race IN ~H~ ~D~ ~G~ ~E~ ~HE~ ~HL~ ~HO~ BEGIN 
        ACTION_IF NOT FILE_EXISTS_IN_GAME ~K_%__c7__kittable__class%_%__c7__kittable__race%.2da~ BEGIN
                COPY ~qd_blank_k_x_x_inline.2da~ ~override/K_%__c7__kittable__class%_%__c7__kittable__race%.2da~
		        INSERT_2DA_ROW 2 2 ~2    %__c7__kitlist%~
        END ELSE BEGIN
	        COPY_EXISTING "K_%__c7__kittable__class%_%__c7__kittable__race%.2da" override
		        COUNT_2DA_ROWS 2 __c7__kittable__read__rows
	        BUT_ONLY
	        APPEND "K_%__c7__kittable__class%_%__c7__kittable__race%.2da" ~%__c7__kittable__read__rows%    %__c7__kitlist%~
	END
END

OUTER_SET __c7__kit__ids = IDS_OF_SYMBOL(~KIT~ ~%kitid%~)

COPY_EXISTING_REGEXP GLOB ~^m7.+\.spl$~ override
        PATCH_IF ("%SOURCE_SIZE%" >= 0x72) BEGIN
                GET_OFFSET_ARRAY ab_array SPL_V10_HEADERS
                PHP_EACH ab_array AS int => ab_off BEGIN
                        GET_OFFSET_ARRAY2 fx_array ab_off ITM_V10_HEAD_EFFECTS
                        PHP_EACH fx_array AS int => fx_off BEGIN
                                READ_SHORT fx_off fx_op
			        READ_LONG (fx_off+0x4) fx_par1
			        READ_LONG (fx_off+0x8) fx_par2
                                PATCH_IF fx_op == 177 && fx_par1 == "%kitspec%" && fx_par2 == 6 BEGIN
                                        WRITE_LONG (fx_off+0x4) "%__c7__kit__ids%"
				        WRITE_LONG (fx_off+0x8) 9
                                END
                        END
                END
	END
BUT_ONLY

// eof