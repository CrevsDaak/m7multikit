/*
 * Copyright (C) 2010-2011 FlameWing
 * Copyright (C) 2015-2017 CrevsDaak
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */


/*
 *	This is in the form of a library file for easier use in other mods.
 *
 *	Created by Nicolas C. aka Crevs Daak on 2014-12-08.
 *	Last edited on 2017-01-22.
 *
 *	Supporting file for the Multikit mod.
 *
 *	DO NOT EDIT THIS FILE UNLESS YOU KNOW WHAT YOU ARE DOING!!!!!
 *
 */

OUTER_SPRINT "7c#ee_multikit_version" "v1.0.3 Multikit %m7version%"
INCLUDE "%basepath%/lib/fl#add_kit_ee.tpa"

ACTION_FOR_EACH multikit_string IN
	multikit_backstab
	multikit_thiefskl
	multikit_thiefscl
	multikit_traplimt
	multikit_sneakatt
	multikit_crppstr
	multikit_clswpbon
	multikit_numwslot
	multikit_clasthac
	multikit_clasiskl
BEGIN
	OUTER_SPRINT "%multikit_string%" ""
END

DEFINE_ACTION_FUNCTION 7c#get_row
	STR_VAR
		the_one_thief_kit = ""
		file = ""

	RET
		__desired_row_
BEGIN
	COPY_EXISTING - "%file%.2da" override
		SPRINT 7c#_7c#get_placeholder ""
		SPRINT __desired_row_ "BUG"
		COUNT_2DA_COLS 7c_7c_num_col
		READ_2DA_ENTRIES_NOW __new_var_w_no_name_ 7c_7c_num_col
		FOR (i = 0; i < __new_var_w_no_name_; ++i) BEGIN
			READ_2DA_ENTRY_FORMER __new_var_w_no_name_ i 0 the_one_entry
			PATCH_IF "%the_one_entry%" STRING_EQUAL_CASE "%the_one_thief_kit%" BEGIN
				FOR (j = 1; j < 7c_7c_num_col; ++j) BEGIN
					READ_2DA_ENTRY_FORMER __new_var_w_no_name_ i j 7c_place_holder
					PATCH_IF j < (7c_7c_num_col - 1) BEGIN
						SPRINT 7c_place_holder EVAL "%7c_place_holder% "
					END
					SPRINT 7c#_7c#get_placeholder EVAL "%7c#_7c#get_placeholder%%7c_place_holder%"
				END
				SPRINT __desired_row_ "%7c#_7c#get_placeholder%"
				PATCH_PRINT ~%__desired_row_%~
				i = __new_var_w_no_name_ + 1
			END
		END
	BUT_ONLY
END

DEFINE_ACTION_FUNCTION 7c#get_column
	STR_VAR
		the_one_thiefscl_kit = ""
		file = ""
BEGIN
	COPY_EXISTING - "%file%.2da" override
		SPRINT file_x EVAL "%file%"
		COUNT_2DA_COLS 7c_7c_num_col
		READ_2DA_ENTRIES_NOW file 7c_7c_num_col - 1
		FOR (i = 0; i < 7c_7c_num_col - 1; ++i) BEGIN
			READ_2DA_ENTRY_FORMER file 0 i the_one_thiefscl_entry
			PATCH_IF "%the_one_thiefscl_entry%" STRING_EQUAL_CASE "%the_one_thiefscl_kit%" BEGIN
				FOR (j = 0; j < file; ++j) BEGIN
					READ_2DA_ENTRY_FORMER file j i 7c_thiefscl_place_holder
					SPRINT 7c_hold_hold "%7c_hold_hold% %7c_thiefscl_place_holder%"
				END
				PATCH_MATCH "%file_x%" WITH
					clasthac BEGIN
						SPRINT multikit_clasthac "%7c_hold_hold%"
					END

					DEFAULT
						PATCH_FAIL @1300042
				END
			END
		END
	BUT_ONLY
END
	
ACTION_IF $classes(1) STRING_EQUAL "THIEF" || $classes(1) STRING_EQUAL "RANGER" BEGIN
	ACTION_IF FILE_CONTAINS_EVALUATED (backstab.2da "%kit1%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit1%"
				file = backstab
			RET
				multikit_backstab = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (thiefskl.2da "%kit1%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit1%"
				file = thiefskl
			RET
				multikit_thiefskl = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (traplimt.2da "%kit1%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit1%"
				file = traplimt
			RET
				multikit_traplimt = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (crippstr.2da "%kit1%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit1%"
				file = crippstr
			RET
				multikit_crippstr = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (sneakatt.2da "%kit1%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit1%"
				file = sneakatt
			RET
				multikit_sneakatt = __desired_row_
		END
	END
END ELSE ACTION_IF $classes(2) STRING_EQUAL "THIEF" BEGIN
	ACTION_IF FILE_CONTAINS_EVALUATED (backstab.2da "%kit2%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit2%"
				file = backstab
			RET
				multikit_backstab = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (thiefskl.2da "%kit2%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit2%"
				file = thiefskl
			RET
				multikit_thiefskl = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (traplimt.2da "%kit2%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit2%"
				file = traplimt
			RET
				multikit_traplimt = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (crippstr.2da "%kit2%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit2%"
				file = crippstr
			RET
				multikit_crippstr = __desired_row_
		END
	END
	ACTION_IF FILE_CONTAINS_EVALUATED (sneakatt.2da "%kit2%") BEGIN
		LAF 7c#get_row
			STR_VAR
				the_one_thief_kit = EVAL "%kit2%"
				file = sneakatt
			RET
				multikit_sneakatt = __desired_row_
		END
	END
END

OUTER_SET SELKATH_OR_SEKOLAH = 0

ACTION_IF FILE_CONTAINS_EVALUATED (backstab.2da "%kit1%") && $classes(1) STRING_EQUAL "RANGER" BEGIN
	OUTER_SET SELKATH_OR_SEKOLAH = 1 // yup, fish be stalkers 100% no fake
END

COPY_EXISTING - clasthac.2da override
	COUNT_2DA_COLS daak_cols__
	READ_2DA_ENTRIES_NOW __clasthac_cd daak_cols__ - 1
	FOR (c__ = 0; c__ < daak_cols__ - 1; ++c__) BEGIN
		READ_2DA_ENTRY_FORMER __clasthac_cd 0 c__ __kit_comp
		PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit0%" BEGIN
			READ_2DA_ENTRY_FORMER __clasthac_cd c__ 1 __kit0_entry
		END
		PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit1%" BEGIN
			READ_2DA_ENTRY_FORMER __clasthac_cd c__ 2 __kit1_entry
		END
		PATCH_IF "%kit2%" STR_CMP "" BEGIN
			PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit2%" BEGIN
				READ_2DA_ENTRY_FORMER __clasthac_cd c__ 3 __kit2_entry
			END
		END
	END
BUT_ONLY

OUTER_SET is_thief = 0

ACTION_IF kitclassids = 13 || kitclassids = 15 || kitclassids = 10 || kitclassids = 18 || kitclassids = 9 BEGIN
	OUTER_SET is_thief = 1
	COPY_EXISTING - clasiskl.2da override
		COUNT_2DA_COLS __cols_daak
		READ_2DA_ENTRIES_NOW __clasiskl_cd __cols_daak - 1
		FOR (j__ = 0; j__ < __cols_daak - 1; ++j__) BEGIN
			READ_2DA_ENTRY_FORMER __clasiskl_cd 0 j__ comp_kit_
			PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit0%" BEGIN
				READ_2DA_ENTRY_FORMER __clasiskl_cd 1 j__ pick_pockets_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 2 j__ open_locks_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 3 j__ find_traps_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 4 j__ move_silently_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 5 j__ hide_in_shadows_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 6 j__ detect_illusion_0
				READ_2DA_ENTRY_FORMER __clasiskl_cd 7 j__ set_traps_0
			END
			PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit1%" BEGIN
				READ_2DA_ENTRY_FORMER __clasiskl_cd 1 j__ pick_pockets_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 2 j__ open_locks_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 3 j__ find_traps_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 4 j__ move_silently_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 5 j__ hide_in_shadows_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 6 j__ detect_illusion_1
				READ_2DA_ENTRY_FORMER __clasiskl_cd 7 j__ set_traps_1
			END
			PATCH_IF $classes(2) STRING_EQUAL "THIEF" || $classes(2) STRING_EQUAL "CLERIC" BEGIN
				PATCH_IF "%comp_kit_%" STRING_EQUAL_CASE "%kit2%" BEGIN
					READ_2DA_ENTRY_FORMER __clasiskl_cd 1 j__ pick_pockets_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 2 j__ open_locks_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 3 j__ find_traps_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 4 j__ move_silently_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 5 j__ hide_in_shadows_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 6 j__ detect_illusion_2
					READ_2DA_ENTRY_FORMER __clasiskl_cd 7 j__ set_traps_2
				END
			END
		END

	ACTION_IF $classes(2) STRING_EQUAL "THIEF" BEGIN
		OUTER_PATCH thieving_skills BEGIN
			LPF m7#max3
				INT_VAR
					n1 = pick_pockets_0
					n2 = pick_pockets_1
					n3 = pick_pockets_2
				RET
					pick_pockets = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = open_locks_0
					n2 = open_locks_1
					n3 = open_locks_2
				RET
					open_locks = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = find_traps_0
					n2 = find_traps_1
					n3 = find_traps_2
				RET
					find_traps = maxval
			END
		
			LPF m7#max3
				INT_VAR
					n1 = move_silently_0
					n2 = move_silently_1
					n3 = move_silently_2
				RET
					move_silently = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = hide_in_shadows_0
					n2 = hide_in_shadows_1
					n3 = hide_in_shadows_2
				RET
					hide_in_shadows = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = detect_illusion_0
					n2 = detect_illusion_1
					n3 = detect_illusion_2
				RET
					detect_illusion = maxval
			END
			LPF m7#max3
				INT_VAR
					n1 = set_traps_0
					n2 = set_traps_1
					n3 = set_traps_2
				RET
					set_traps = maxval
			END
		END
	END ELSE BEGIN
		OUTER_SET pick_pockets = pick_pockets_0 > pick_pockets_1 ? pick_pockets_0 : pick_pockets_1
		OUTER_SET open_locks = open_locks_0 > open_locks_1 ? open_locks_0 : open_locks_1
		OUTER_SET find_traps = find_traps_0 > find_traps_1 ? find_traps_0 : find_traps_1
		OUTER_SET move_silently = move_silently_0 > move_silently_1 ? move_silently_0 : move_silently_1
		OUTER_SET hide_in_shadows = hide_in_shadows_0 > hide_in_shadows_1 ? hide_in_shadows_0 : hide_in_shadows_1
		OUTER_SET detect_illusion = detect_illusion_0 > detect_illusion_1 ? detect_illusion_0 : detect_illusion_1
		OUTER_SET set_traps = set_traps_0 > set_traps_1 ? set_traps_0 : set_traps_1
	END
END

OUTER_SPRINT multikit_clasiskl ~%pick_pockets% %open_locks% %find_traps% %move_silently% %hide_in_shadows% %detect_illusion% %set_traps%~

ACTION_IF FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_%kit0%") || FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_%kit1%") || FILE_CONTAINS_EVALUATED (clastext.2da "FALLEN_%kit2%") BEGIN
	OUTER_SET multikit_fallen = RESOLVE_STR_REF (@1300040)
	OUTER_SET multikit_fallen_notice = RESOLVE_STR_REF (@1300041)
END ELSE BEGIN
	OUTER_SET multikit_fallen = (0 - 2)
	OUTER_SET multikit_fallen_notice = (0 - 2)
END

COPY_EXISTING - clswpbon.2da override
	COUNT_2DA_COLS crevs_cols__
	READ_2DA_ENTRIES_NOW clswpbon__ crevs_cols__
	FOR (__ol = 0; __ol < clswpbon__; __ol += 1) BEGIN
		READ_2DA_ENTRY_FORMER clswpbon__ __ol 0 __kit_2_comp
		PATCH_IF "%__kit_2_comp%" STRING_EQUAL_CASE "%kit0%" BEGIN
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 1 __has_spec_apr_0
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 2 __unarmed_divisor_0
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 3 __unprof_penalty_0
		END
		PATCH_IF "%__kit_2_comp%" STRING_EQUAL_CASE "%kit1%" BEGIN
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 1 __has_spec_apr_1
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 2 __unarmed_divisor_1
			READ_2DA_ENTRY_FORMER clswpbon__ __ol 3 __unprof_penalty_1
		END
		PATCH_IF $classes(2) STRING_EQUAL "THIEF" || $classes(2) STRING_EQUAL "CLERIC" BEGIN
			PATCH_IF "%__kit_2_comp%" STRING_EQUAL_CASE "%kit2%" BEGIN
				READ_2DA_ENTRY_FORMER clswpbon__ __ol 1 __has_spec_apr_2
				READ_2DA_ENTRY_FORMER clswpbon__ __ol 2 __unarmed_divisor_2
				READ_2DA_ENTRY_FORMER clswpbon__ __ol 3 __unprof_penalty_2
			END		
		END
	END

ACTION_IF $classes(2) STRING_EQUAL "THIEF" || $classes(2) STRING_EQUAL "CLERIC" BEGIN
	OUTER_PATCH clswpbon_ur_mom BEGIN
		LPF m7#min3
			INT_VAR
				n1 = __unprof_penalty_0
				n2 = __unprof_penalty_1
				n3 = __unprof_penalty_2
			RET
				__unprof_penalty = minval
		END
		LPF m7#max3
			INT_VAR
				n1 = __has_spec_apr_0
				n2 = __has_spec_apr_1
				n3 = __has_spec_apr_2
			RET
				__has_spec_apr = maxval
		END
		LPF m7#max3
			INT_VAR
				n1 = __unarmed_divisor_0
				n2 = __unarmed_divisor_1
				n3 = __unarmed_divisor_2
			RET
				__unarmed_divisor = maxval
		END
	END
END ELSE BEGIN
	OUTER_SET __has_spec_apr = __has_spec_apr_0 < __has_spec_apr_1 ? __has_spec_apr_1 : __has_spec_apr_0 
	OUTER_SET __unarmed_divisor = __unarmed_divisor_0 < __unarmed_divisor_1 ? __unarmed_divisor_1 : __unarmed_divisor_0
	OUTER_SET __unprof_penalty = __unprof_penalty_0 > __unprof_penalty_1 ? __unprof_penalty_1 : __unprof_penalty_0
END

OUTER_SPRINT multikit_clswpbon EVAL "%__has_spec_apr% %__unarmed_divisor% %__unprof_penalty%"

LAF fl#add_kit_ee
	INT_VAR
		7c#kit_class = "%kitclassids%"
		fallen = "%multikit_fallen%"
		fallen_notice = "%multikit_fallen_notice%"
		7c#thief_class = is_thief
		7c#stalker_kit = SELKATH_OR_SEKOLAH // Imma humanoyd oceanik fisssh
	STR_VAR
		kit_name = EVAL "%kitid%"
		backstab = EVAL "%multikit_backstab%"
		thiefskl = EVAL "%multikit_thiefskl%"
		traplimt = EVAL "%multikit_traplimt%"
		sneakatt = EVAL "%multikit_sneakatt%"
		clswpbon = EVAL "%multikit_clswpbon%"
		crippstr = EVAL "%multikit_crppstr%"
		clasthac = EVAL "%multikit_clasthac%"
		clasiskl = EVAL "%multikit_clasiskl%"
END

// eof